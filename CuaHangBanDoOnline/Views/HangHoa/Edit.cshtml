@model CuaHangBanDoOnline.Models.HangHoa

<h2>Chỉnh Sửa Hàng Hóa</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="MaHangHoa" />

    <div class="form-group mb-3">
        <label asp-for="TenHangHoa" class="form-label"></label>
        <input asp-for="TenHangHoa" class="form-control" required />
        <span asp-validation-for="TenHangHoa" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="GiaGoc" class="form-label"></label>
        <input asp-for="GiaGoc" type="number" step="0.01" class="form-control" required />
        <span asp-validation-for="GiaGoc" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="GiaBan" class="form-label"></label>
        <input asp-for="GiaBan" type="number" step="0.01" class="form-control" readonly />
        <small class="form-text text-muted">Giá bán sẽ được cập nhật tự động khi áp dụng giảm giá.</small>
        <span asp-validation-for="GiaBan" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="SoLuongTon" class="form-label"></label>
        <input asp-for="SoLuongTon" type="number" class="form-control" required />
        <span asp-validation-for="SoLuongTon" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="MoTa" class="form-label"></label>
        <textarea asp-for="MoTa" class="form-control" rows="3"></textarea>
        <span asp-validation-for="MoTa" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Hình Ảnh Hiện Tại</label><br />
        @if (!string.IsNullOrEmpty(Model.Hinh))
        {
            <img src="@Model.Hinh" alt="Hình ảnh sản phẩm" class="img-thumbnail" style="max-width: 150px; max-height: 150px;" />
        }
        else
        {
            <p>Chưa có hình ảnh</p>
        }
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Chọn Hình Ảnh Mới</label>
        <input type="file" name="HinhAnh" class="form-control" />
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Danh Mục Hiện Tại</label>
        <ul id="danhMucList" class="list-group">
            @if (ViewBag.DanhMucHienTai != null && ViewBag.DanhMucHienTai.Count > 0)
            {
                @foreach (var danhMuc in (List<(int MaDanhMuc, string TenDanhMuc)>)ViewBag.DanhMucHienTai)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center" data-ma-danh-muc="@danhMuc.MaDanhMuc">
                        @danhMuc.TenDanhMuc
                        <button type="button" class="btn btn-danger btn-sm btn-xoa-danh-muc">Xóa</button>
                    </li>
                }
            }
            else
            {
                <li class="list-group-item">Chưa có danh mục</li>
            }
        </ul>
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Thêm Danh Mục</label>
        <select id="maDanhMuc" class="form-control">
            <option value="">Chọn danh mục</option>
            @foreach (var danhMuc in ViewBag.DanhMucs)
            {
                <option value="@danhMuc.Value">@danhMuc.Text</option>
            }
        </select>
        <button type="button" class="btn btn-primary mt-2" id="btnThemDanhMuc">Thêm Danh Mục</button>
    </div>

    <button type="submit" class="btn btn-success">Cập Nhật</button>
    <a asp-action="Index" class="btn btn-secondary">Hủy</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Add category
        document.getElementById("btnThemDanhMuc").addEventListener("click", function () {
            var maDanhMuc = document.getElementById("maDanhMuc").value;
            var maHangHoa = @Model.MaHangHoa;
            var token = document.getElementsByName("__RequestVerificationToken")[0].value;

            if (!maDanhMuc) {
                toastr.error("Vui lòng chọn một danh mục!");
                return;
            }

            fetch('/HangHoa/Themdanhmuc', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `maHangHoa=${maHangHoa}&maDanhMuc=${maDanhMuc}&__RequestVerificationToken=${token}`
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        var danhMucList = document.getElementById("danhMucList");
                        // Remove "Chưa có danh mục" message if present
                        if (danhMucList.querySelector("li").textContent === "Chưa có danh mục") {
                            danhMucList.innerHTML = "";
                        }
                        var newDanhMuc = document.createElement("li");
                        newDanhMuc.className = "list-group-item d-flex justify-content-between align-items-center";
                        newDanhMuc.setAttribute("data-ma-danh-muc", maDanhMuc);
                        newDanhMuc.innerHTML = `${data.tenDanhMuc} <button type="button" class="btn btn-danger btn-sm btn-xoa-danh-muc">Xóa</button>`;
                        danhMucList.appendChild(newDanhMuc);
                        // Reset dropdown to default value
                        document.getElementById("maDanhMuc").value = "";
                        // Add event listener to the new remove button
                        newDanhMuc.querySelector(".btn-xoa-danh-muc").addEventListener("click", removeDanhMuc);
                        // Show success message with Toastr
                        toastr.success(data.message);
                    } else {
                        toastr.error(data.message || "Lỗi khi thêm danh mục!");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    toastr.error("Đã xảy ra lỗi: " + error.message);
                });
        });

        // Remove category
        function removeDanhMuc(event) {
            var liElement = event.target.closest("li");
            var maDanhMuc = liElement.getAttribute("data-ma-danh-muc");
            var maHangHoa = @Model.MaHangHoa;
            var token = document.getElementsByName("__RequestVerificationToken")[0].value;

            if (!maDanhMuc) {
                toastr.error("Không thể xác định danh mục để xóa!");
                return;
            }

            fetch('/HangHoa/XoaDanhMuc', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `maHangHoa=${maHangHoa}&maDanhMuc=${maDanhMuc}&__RequestVerificationToken=${token}`
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        liElement.remove();
                        // If no categories left, show "Chưa có danh mục"
                        var danhMucList = document.getElementById("danhMucList");
                        if (danhMucList.children.length === 0) {
                            danhMucList.innerHTML = '<li class="list-group-item">Chưa có danh mục</li>';
                        }
                        toastr.success(data.message);
                    } else {
                        toastr.error(data.message || "Lỗi khi xóa danh mục!");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    toastr.error("Đã xảy ra lỗi: " + error.message);
                });
        }

        // Attach event listeners to existing remove buttons
        document.querySelectorAll(".btn-xoa-danh-muc").forEach(button => {
            button.addEventListener("click", removeDanhMuc);
        });
    </script>
}